#Test için düzenlenmiştir


version: "3.8"

services:
  db:
    image: postgres:13.8  # PostgreSQL 13.8 imajı kullanılıyor
    restart: always
    environment:
      POSTGRES_PASSWORD: mysecretpassword  # db.env ile uyumlu
      POSTGRES_USER: postgres
      POSTGRES_DB: wa_db  # Eklenmeli! WhatsApp için veritabanı adı
    ports:
      - "5432:5432"  # Dış → İç PostgreSQL portu (DOĞRU)
    volumes:
      - postgresData:/var/lib/postgresql/data  # Veritabanı kalıcı depolama
    network_mode: bridge
    cap_drop:
      - MKNOD

  wacore:
    image: docker.whatsapp.biz/coreapp:v${WA_API_VERSION:?Run docker-compose with env var WA_API_VERSION (ex. WA_API_VERSION=2.41.2 docker-compose <command> <options>)}  # Sürümü dışarıdan veriyoruz
    command: ["/opt/whatsapp/bin/wait_on_postgres.sh", "/opt/whatsapp/bin/launch_within_docker.sh"]
    volumes:
      - whatsappMedia:/usr/local/wamedia
    env_file:
      - db.env
    environment:
      WA_RUNNING_ENV_VERSION: v2.2.3  # Docker template versiyonu
      ORCHESTRATION: DOCKER-COMPOSE
    depends_on:
      - db
    network_mode: bridge
    cap_drop:
      - MKNOD

  waweb:
    image: docker.whatsapp.biz/web:v${WA_API_VERSION:?Run docker-compose with env var WA_API_VERSION (ex. WA_API_VERSION=2.41.2 docker-compose <command> <options>)}
    command: ["/opt/whatsapp/bin/wait_on_postgres.sh", "/opt/whatsapp/bin/launch_within_docker.sh"]
    ports:
      - "9090:443"  # HTTPS dışa açık port: 9090
    volumes:
      - whatsappMedia:/usr/local/wamedia
    env_file:
      - db.env
    environment:
      WACORE_HOSTNAME: wacore
      WA_RUNNING_ENV_VERSION: v2.2.3
      ORCHESTRATION: DOCKER-COMPOSE
    depends_on:
      - db
      - wacore
    network_mode: bridge
    cap_drop:
      - MKNOD

volumes:
  postgresData:
  whatsappMedia:
